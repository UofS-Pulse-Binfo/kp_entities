<?php
/**
 * @file
 * Contains core hook implementations for this module.
 */

require_once('includes/job.create_tripal_types.inc');

/**
 * Implements hook_menu().
 */
function kp_entities_menu() {
  $item = array();

  // Adds a +Add KnowPulse Content Types link on the 'Tripal Content Types' page.
  $items['admin/structure/bio_data/knowpulse-types'] = array(
    'title' => 'Add KnowPulse Content Types',
    'description' => t('Create KnowPulse-specific Tripal Content Types.'),
    'page callback' => 'kp_entities_add_types_job',
    'page arguments' => array(),
    'access arguments' => array('administer tripal'),
    'type' => MENU_LOCAL_ACTION,
    'weight' => 3
  );

  return $items;
}

/**
 * Provides a list of the ontologies and terms used by KnowPulse.
 *
 * @return
 *   An array of ontologies keyed by ontology short-name with values themselves
 *   being arrays with the following keys:
 *    - name: the name of the ontology
 *    - definition: the definition of the ontology
 *    - file: the name of the OBO file to load this ontology
 *        (expected to be in kp_entities/ontologies folder)
 *    - all terms: Boolean indicating to load all terms in this ontology
 *    - terms: an array of terms if we only use a couple
 */
function kp_entities_ontology_list() {
  $ontologies = array();

/*
  $ontologies['TO'] = array(
    'name' => 'Plant Trait Ontology',
    'definition' => 'It is a controlled vocabulary to describe each trait as a distinguishable feature, characteristic, quality or phenotypic feature of a developing or mature individual.',
    'file' => 'to.obo',
    'all terms' => TRUE,
  );
*

/*
  $ontologies['PO'] = array(
    'name' => 'Plant Ontology',
    'definition' => 'A controlled vocabulary to describe plant anatomy and the stages of plant development.',
    'file' => 'po.obo',
    'all terms' => TRUE,
  );
*/

  $ontologies['CO_010'] = array(
    'name' => 'Crop Germplasm Ontology',
    'definition' => 'A controlled vocabulary to describe germplasm.',
    'file' => 'CO_010.obo',
    'all terms' => TRUE,
  );

  $ontologies['CO_339'] = array(
    'name' => 'Lentil Crop Ontology',
    'definition' => 'A controlled vocabulary to describe Lentil traits.',
    'file' => 'CO_339.obo',
    'all terms' => TRUE,
  );

  $ontologies['CO_338'] = array(
    'name' => 'Chickpea Crop Ontology',
    'definition' => 'A controlled vocabulary to describe Chickpea traits.',
    'file' => 'CO_338.obo',
    'all terms' => TRUE,
  );

  $ontologies['CO_335'] = array(
    'name' => 'Common Bean Crop Ontology',
    'definition' => 'A controlled vocabulary to describe Common Bean traits.',
    'file' => 'CO_335.obo',
    'all terms' => TRUE,
  );

  $ontologies['SIO'] = array(
    'name' => 'SIO',
    'definition' => 'The Semanticscience Integrated Ontology (SIO) is an ontology to facilitate biomedical knowledge discovery.',
    'all terms' => FALSE,
    'terms' => array(
      array(
        'id' => 'SIO:001066',
        'name' => 'study',
        'definition' => 'A study is a process that realizes the steps of a study design.',
      ),
      array(
        'id' => 'SIO:000994',
        'name' => 'experiment',
        'definition' => 'An experiment is an investigation that has the goal of verifying, falsifying, or establishing the validity of a hypothesis.',
      ),
    ),
  );

  $ontologies['EDAM'] = array(
    'name' => 'EDAM',
    'definition' => 'EDAM is an ontology of well established, familiar concepts that are prevalent within bioinformatics, including types of data and data identifiers, data formats, operations and topics. EDAM is a simple ontology - essentially a set of terms with synonyms and definitions - organised into an intuitive hierarchy for convenient use by curators, software developers and end-users. EDAM is suitable for large-scale semantic annotations and categorization of diverse bioinformatics resources. EDAM is also suitable for diverse application including for example within workbenches and workflow-management systems, software distributions, and resource registries.',
    'all terms' => FALSE,
    'terms' => array(
      array(
        'id' => 'data:1278',
        'name' => 'Genetic Map',
        'definition' => 'A map showing the relative positions of genetic markers in a nucleic acid sequence, based on estimation of non-physical distance such as recombination frequencies. A genetic (linkage) map indicates the proximity of two genes on a chromosome, whether two genes are linked and the frequency they are transmitted together to an offspring. They are limited to genetic markers of traits observable only in whole organisms.',
        'db_name' => 'EDAM',
      ),
    ),
  );

  $ontologies['KP_Germplasm'] = array(
    'name' => 'KnowPulse Germplasm',
    'definition' => 'A controlled vocabulary for germplasm terms that were not available in the Crop Germplasm Ontology.',
    'all terms' => FALSE,
    'terms' => array(
      array(
        'id' => 'KP_Germplasm:F1',
        'name' => 'F1',
        'definition' => 'The first generation of offsprint from a parental cross.',
        'db_name' => 'KP_Germplasm',
      ),
      array(
        'id' => 'KP_Germplasm:RIL',
        'name' => 'Recombinant Inbred Line',
        'definition' => 'A recombinant inbred line (RIL) population is developed using single seed descent from the F2 generation. The result is a set of homogeneous, homozygous lines for which large amounts of seed can be produced for replicated trials.',
        'db_name' => 'KP_Germplasm',
      ),
    ),
  );

  return $ontologies;
}

/**
 * Provides a list of Tripal Content Types used by KnowPulse.
 *
 * @return
 *   An array of tripal content types keyed by term.
 */
function kp_entities_types_list() {
  $types = array();

  $type_cvterm_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'type', ':vocab' => 'rdfs'))->fetchField();

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'organism', ':vocab' => 'obi'))->fetchField();
  $types['obi__0100026'] = array(
    'label' => 'Species',
    'vocabulary' => 'OBI',
    'accession' => '0100026',
    'term_name' => 'organism',
    'storage_args' => array(
      'data_table' => 'organism',
      'type_id' => $type_id,
    ),
  );

  $types['SIO__001066'] = array(
    'label' => 'Research Project',
    'vocabulary' => 'SIO',
    'accession' => '001066',
    'term_name' => 'study',
    'storage_args' => array(
      'data_table' => 'project',
      'type_linker_table' => 'projectprop',
      'type_column' => 'type_id',
      'type_id' => $type_cvterm_id,
      'type_value' => 'Project',
    ),
  );

  $types['SIO__000994'] = array(
    'label' => 'Research Experiment',
    'vocabulary' => 'SIO',
    'accession' => '000994',
    'term_name' => 'experiment',
    'storage_args' => array(
      'data_table' => 'project',
      'type_linker_table' => 'projectprop',
      'type_column' => 'type_id',
      'type_id' => $type_cvterm_id,
      'type_value' => 'Experiment',
    ),
  );

  $types['SO__0001026'] = array(
    'label' => 'Genome Assembly',
    'vocabulary' => 'SO',
    'accession' => '0001026',
    'term_name' => 'genome',
    'storage_args' => array(
      'data_table' => 'project',
      'type_linker_table' => 'projectprop',
      'type_column' => 'type_id',
      'type_id' => $type_cvterm_id,
      'type_value' => 'Genome Assembly',
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'Publication', ':vocab' => 'tripal_pub'))->fetchField();
  $types['TPUB__0000002'] = array(
    'label' => 'Publication',
    'vocabulary' => 'TPUB',
    'accession' => '0000002',
    'term_name' => 'publication',
    'storage_args' => array(
      'data_table' => 'pub',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'Genetic Map', ':vocab' => 'EDAM'))->fetchField();
  $types['data__1278'] = array(
    'label' => 'Genetic Map',
    'vocabulary' => 'data',
    'accession' => '1278',
    'term_name' => 'Genetic Map',
    'storage_args' => array(
      'data_table' => 'featuremap',
      'type_id' => $type_id,
    ),
  );

  // Features ///////////////

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'chromosome', ':vocab' => 'sequence'))->fetchField();
  $types['SO__0000340'] = array(
    'label' => 'Chromosome',
    'vocabulary' => 'SO',
    'accession' => '0000340',
    'term_name' => 'chromosome',
    'storage_args' => array(
      'data_table' => 'feature',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'contig', ':vocab' => 'sequence'))->fetchField();
  $types['SO__0000149'] = array(
    'label' => 'Contig',
    'vocabulary' => 'SO',
    'accession' => '0000149',
    'term_name' => 'contig',
    'storage_args' => array(
      'data_table' => 'feature',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'sequence_variant', ':vocab' => 'sequence'))->fetchField();
  $types['SO__0001060'] = array(
    'label' => 'Variant',
    'vocabulary' => 'SO',
    'accession' => '0001060',
    'term_name' => 'sequence_variant',
    'storage_args' => array(
      'data_table' => 'feature',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'genetic_marker', ':vocab' => 'sequence'))->fetchField();
  $types['SO__0001645'] = array(
    'label' => 'Marker',
    'vocabulary' => 'SO',
    'accession' => '0001645',
    'term_name' => 'genetic_marker',
    'storage_args' => array(
      'data_table' => 'feature',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'QTL', ':vocab' => 'sequence'))->fetchField();
  $types['SO__0000771'] = array(
    'label' => 'QTL',
    'vocabulary' => 'SO',
    'accession' => '0000771',
    'term_name' => 'QTL',
    'storage_args' => array(
      'data_table' => 'feature',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  // Germplasm //////////////

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'accession', ':vocab' => 'GCP germplasm ontology'))->fetchField();
  $types['CO_010__0000044'] = array(
    'label' => 'Germplasm Accession',
    'vocabulary' => 'CO_010',
    'accession' => '0000044',
    'term_name' => 'accession',
    'storage_args' => array(
      'data_table' => 'stock',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'F1', ':vocab' => 'KnowPulse Germplasm'))->fetchField();
  $types['KP_Germplasm__F1'] = array(
    'label' => 'F1 (Breeding Cross)',
    'vocabulary' => 'KP_Germplasm',
    'accession' => 'F1',
    'term_name' => 'F1',
    'storage_args' => array(
      'data_table' => 'stock',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'cultivar', ':vocab' => 'GCP germplasm ontology'))->fetchField();
  $types['CO_010__0000029'] = array(
    'label' => 'Registered Variety',
    'vocabulary' => 'CO_010',
    'accession' => '0000029',
    'term_name' => 'cultivar',
    'storage_args' => array(
      'data_table' => 'stock',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  $type_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'Recombinant Inbred Line', ':vocab' => 'KnowPulse Germplasm'))->fetchField();
  $types['KP_Germplasm__RIL'] = array(
    'label' => 'Recombinant Inbred Line',
    'vocabulary' => 'KP_Germplasm',
    'accession' => 'RIL',
    'term_name' => 'Recombinant Inbred Line',
    'storage_args' => array(
      'data_table' => 'stock',
      'type_column' => 'type_id',
      'type_id' => $type_id,
    ),
  );

  // Traits /////////////////

  $cvterm_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'Lentil Traits', ':vocab' => 'Lentil Crop Ontology'))->fetchField();
  $cv_id = chado_query('SELECT cv_id FROM {cv} WHERE name=:vocab',
    array(':vocab' => 'Crop Ontology, Lentil Trait'))->fetchField();
  $types['CO_339__ROOT'] = array(
    'label' => 'Lentil Traits',
    'vocabulary' => 'CO_339',
    'accession' => 'ROOT',
    'term_name' => 'Lentil Traits',
    'storage_args' => array(
      'data_table' => 'cvterm',
      'type_id' => $cvterm_id,
      'type_value' => $cv_id,
    ),
  );

  $cvterm_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'Chickpea Traits', ':vocab' => 'Chickpea Crop Ontology'))->fetchField();
  $cv_id = chado_query('SELECT cv_id FROM {cv} WHERE name=:vocab',
    array(':vocab' => 'Crop Ontology, Chickpea Trait'))->fetchField();
  $types['CO_338__ROOT'] = array(
    'label' => 'Chickpea Traits',
    'vocabulary' => 'CO_338',
    'accession' => 'ROOT',
    'term_name' => 'Chickpea Traits',
    'storage_args' => array(
      'data_table' => 'cvterm',
      'type_id' => $cvterm_id,
      'type_value' => $cv_id,
    ),
  );

  $cvterm_id = chado_query("SELECT cvterm_id FROM {cvterm} WHERE name=:term AND cv_id IN (SELECT cv_id FROM {cv} WHERE name=:vocab)",
    array(':term' => 'Common Bean Traits', ':vocab' => 'Common Bean Crop Ontology'))->fetchField();
  $cv_id = chado_query('SELECT cv_id FROM {cv} WHERE name=:vocab',
    array(':vocab' => 'Crop Ontology, Common Bean Traits'))->fetchField();
  $types['CO_335__ROOT'] = array(
    'label' => 'Common Bean Traits',
    'vocabulary' => 'CO_335',
    'accession' => 'ROOT',
    'term_name' => 'Common Bean Traits',
    'storage_args' => array(
      'data_table' => 'cvterm',
      'type_id' => $cvterm_id,
      'type_value' => $cv_id,
    ),
  );

  return $types;
}
